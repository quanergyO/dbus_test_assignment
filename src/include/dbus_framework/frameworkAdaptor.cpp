/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ru.framework.DbusFramework.xml -i dbusframework.h -a frameworkAdaptor
 *
 * qdbusxml2cpp is Copyright (C) 2023 The Qt Company Ltd and other contributors.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "frameworkAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class DbusFrameworkAdaptor
 */

DbusFrameworkAdaptor::DbusFrameworkAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

DbusFrameworkAdaptor::~DbusFrameworkAdaptor()
{
    // destructor
}

QVariant DbusFrameworkAdaptor::callMethod(const QString &serviceName, const QString &method, const QStringList &args)
{
    // handle method call ru.framework.DbusFramework.callMethod
    QVariant out0;
    QMetaObject::invokeMethod(parent(), "callMethod", Q_RETURN_ARG(QVariant, out0), Q_ARG(QString, serviceName), Q_ARG(QString, method), Q_ARG(QStringList, args));
    return out0;
}

void DbusFrameworkAdaptor::registerService(const QString &name, const QString &dbusService, const QString &dbusPath, const QString &dbusInterface)
{
    // handle method call ru.framework.DbusFramework.registerService
    QMetaObject::invokeMethod(parent(), "registerService", Q_ARG(QString, name), Q_ARG(QString, dbusService), Q_ARG(QString, dbusPath), Q_ARG(QString, dbusInterface));
}

